export GOROOT="/usr/local/go"
export GOBIN=$GOROOT/bin
export PATH="$HOME/bin:/usr/local/bin:/usr/local/Cellar/ruby/3.0.0_1/bin:/Applications/Contents/Resources/app/bin:/Users/cmacrae/Documents/google-cloud-sdk/bin:/Users/cmacrae/.local/bin:$PATH"
fpath+=~/.zfunc

# Path to your oh-my-zsh installation.
export ZSH="/Users/cmacrae/.oh-my-zsh"

# for tmux, because it asked me to add this
export DISABLE_AUTO_TITLE='true'

export KUBE_EDITOR="nvim -u NORC"

export VSCODE_LLDB_DIR='~/.vscode/extensions/vadimcn.vscode-lldb-1.8.1/'

# rename tab title in iterm
# function tt() {
#     echo -ne "\e]1;$*\a"
# }

# buildkit now please, docker
export DOCKER_BUILDKIT=1

ZSH_THEME="xxf"
#ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
    git
    kubectl
    zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh
source <(stern --completion=zsh)

#source $HOME/repos/kube-ps1/kube-ps1.sh
source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"

# HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=10000
setopt appendhistory

onelogin() {

  # Onelogin username/email
  ONELOGIN_USERNAME="colin.macrae@hearst.co.uk"

  # The location to the onelogin python git repo
  ONELOGIN_DIR="/Users/cmacrae/repos/onelogin-python-aws-assume-role"

  # The session duration in seconds
  # 1hr = 3600, 12hr = 43200
  SESSION_DURATION="43200"

  CURR_DIR="$(pwd)"
  CURR_VENV="${VIRTUAL_ENV}"

  unset AWS_PROFILE
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_ACCESS_KEY_ID
  unset AWS_SESSION_TOKEN
  unset AWS_DEFAULT_REGION

  cd "${ONELOGIN_DIR}"
  [ ! -z "${CURR_VENV}" ] && deactivate
  source ${ONELOGIN_DIR}/.venv/bin/activate

  python src/onelogin/aws-assume-role/aws-assume-role.py \
    --onelogin-username "${ONELOGIN_USERNAME}" \
    --onelogin-subdomain "hearstmagazinesuk" \
    --onelogin-app-id "777051" \
    --aws-region "us-east-1" \
    --profile "onelogin" \
    --duration "${SESSION_DURATION}"

  export AWS_PROFILE=onelogin
  export AWS_ACCESS_KEY_ID="$(cat ${HOME}/.aws/credentials | printSection "onelogin" | perl -n -e'/^aws_access_key_id = (.+)$/ && print $1')"
  export AWS_SECRET_ACCESS_KEY="$(cat ${HOME}/.aws/credentials | printSection "onelogin" | perl -n -e'/^aws_secret_access_key = (.+)$/ && print $1')"
  export AWS_SESSION_TOKEN="$(cat ${HOME}/.aws/credentials | printSection "onelogin" | perl -n -e'/^aws_session_token = (.+)$/ && print $1')"

  deactivate

  cd ${CURR_DIR}
  [ ! -z "${CURR_VENV}" ] && source ${CURR_VENV}/bin/activate

}

printSection()
{
  # read aws credential file by sections
  section="${1}"
  found=false
  while read line
  do
    [[ $found == false && "$line" != "[$section]" ]] &&  continue
    [[ $found == true && "${line:0:1}" = '[' ]] && break
    found=true
    echo "$line"
  done
}

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
